extends layout

block content
	.right-align
			a(href="/") Kelsey Breseman
	.main-container
		h1 Learn to code

		i There are a lot of sites out there intended to teach coding.
			| However, it's often hard to move from one step to the next, or know when that is a good idea.
			| This lesson path is intended to guide you (the beginning coder, by assumption) through the many excellent resources available such that you become an intermediate coder.
			p If you follow this path to its so-far completion, you probably won't need me to tell you where to look for the next step.

		h2 Code familiarity

		p We're going to start with JavaScript, because it's fairly easy to learn, and because you should be able to make and interact with something really quickly.

		p Head over to <a href="http://www.codecademy.com/">Codecademy</a> and try some of their introductory JavaScript lessons.

		p Spend about two hours here, or until you're reasonably comfortable with the syntax, then move on to the next step.

		p You can always learn more syntax as you go. (Google will be your guide through Stack Overflow, MDN, and other excellent code-related resources.)

		h2 Node basics

		p Node is all about making small pieces of code that do one thing really well.
		| What that means for you is that with Node, you can use other people's Node packages
		| to make your code do more things quickly. Think of it like buying pre-fabricated subassemblies for a robot.
		| Only it's free– thanks, open source community!

		p Node has a little online school. <a href="http://nodeschool.io/#learn-you-node">Go there</a> and do the lesson called Learnyounode.

		p Learnyounode will take you from a “Hello World” to parsing information from multiple websites asynchronously.
		
		p This should give you, in ~2 days of effort, a pretty good idea of how what is available within Node and how quickly you can make things.

		h2 Learn some web programming tools

		p Work through the first few lessons and homeworks of <a href="https://github.com/olinjs">Olin.JS</a>.
		| You'll become familiar with Heroku, Jade, JQuery, AJAX, and more.
		p You might run into some frustration; not all of the lessons contain all of the information you will need to complete the assignments.
		p Use this as your entrance point into the open source community: if something is wrong or missing, learn how to submit an issue or a pull request on Github, where the lessons are hosted.
		p If you can't figure something out, try asking a question on Stack Overflow (be sure to Google it first and define your question, though. People can be a bit snarky on Stack Overflow).

		h2 Make stuff

		p Time to make some projects. You could design your own (e.g. make yourself a cool website or project portfolio) or work through some more homeworks from <a href="https://github.com/olinjs">Olin.JS</a>.

		p Designing and making your own webapps and pages will make you think "ooh, it would be cool if..." and then you can google around to find out how to implement your idea.

		h2 Learn some theory

		p Okay, now that you're fairly comfortable making things with code, it's time to learn some of the theory behind programming.
		| This step is intended to help you write better code, and understand why some code could be "better" when the job gets done either way.

		p Read the book <a href="http://www.nostarch.com/hacking2.htm">Hacking: The Art of Exploitation</a>. It's not in JavaScript, but you'll see the patterns. Maybe time to learn a bit of C.