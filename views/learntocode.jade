extends layout

block content

	h1 Learn to code

	h4 A lesson path intended to maximize speed and efficacy at all stages of learning and reduce frustration and feelings of impotence.

	h2 Code familiarity

	p We're going to start with JavaScript, because making websites is a really fast way to make something you can see and interact with.

	p Head over to <a href="http://www.codecademy.com/">Codecademy</a> and try some of their introductory JavaScript lessons.

	p Spend about three hours here, or until you're reasonably comfortable with the syntax, then move on to the next step. You can always learn more syntax as you go.

	h2 Node basics

	p Node is all about making small pieces of code that do one thing really well.
	| What that means for you is that with Node, you can use other people's Node packages
	| to make your code do more things quickly. Think of it like buying pre-fabricated subassemblies for a robot.
	| Only it's free.

	p Node has a little online school. <a href="http://nodeschool.io/#learn-you-node">Go there</a> and do the lesson called Learnyounode.

	p Learnyounode will take you from a “Hello World” to parsing information from multiple websites asynchronously.
	
	p This should give you, in ~2 days of effort, a pretty good idea of how what is available within Node and how quickly you can make things.

	h2 Learn some web programming tools

	p Work through the first few lessons and homeworks of <a href="https://github.com/olinjs">Olin.JS</a>.
	| You'll become familiar with Heroku, Jade, JQuery, AJAX, and more.

	h2 Make stuff

	p Time to make some projects. You could design your own (e.g. make yourself a cool website) or work through some more homeworks from <a href="https://github.com/olinjs">Olin.JS</a>.

	p Designing and making your own webapps and pages will make you think "ooh, it would be cool if..." and then you can google around to find out how to implement your idea.

	h2 Learn some theory

	p Okay, now that you're fairly comfortable making things with code, it's time to learn some of the theory behind programming.
	| This step is intended to help you write better code, and understand why some code could be "better" when the job gets done either way.

	p Read the book <a href="http://www.nostarch.com/hacking2.htm">Hacking: The Art of Exploitation</a>.